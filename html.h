const char html[] PROGMEM = R"=====(<html><head><title>PID</title></head><body><canvas id='canvas'></canvas><script>const canvas=document.getElementById('canvas'),ctx=canvas.getContext('2d');canvas.width=innerWidth-50,canvas.height=innerHeight-50;function line(x,y,x1,y1){ctx.beginPath(),ctx.moveTo(x,y),ctx.lineTo(x1,y1),ctx.stroke()}function drawPoint(x,y){ctx.beginPath(),ctx.arc(x,y,5,0,2*Math.PI),ctx.fillStyle=graphColor,ctx.fill()}var values=[[0,5],[1,10],[2,3]],stepSize=40,graphColor='blue';function drawGraph(values){ctx.clearRect(0,0,canvas.width,canvas.height),ctx.lineWidth=1,ctx.strokeStyle=graphColor;const maxValueX=Math.max(...values.map(pair=>pair[0])),maxValueY=Math.max(...values.map(pair=>pair[1])),scaleX=(canvas.width-20)/maxValueX,scaleY=(canvas.height-20)/maxValueY;var p=values[0];for(var i=1;i<values.length;i++)drawPoint(p[0]*scaleX,canvas.height-(p[1]*scaleY)),ctx.fillText(p[1],0,canvas.height-(p[1]*scaleY)),ctx.fillText(p[0],p[0]*scaleX,canvas.height),n=values[i],line(p[0]*scaleX,canvas.height-(p[1]*scaleY),n[0]*scaleX,canvas.height-(n[1]*scaleY)),p=n}drawGraph(values);const gateway=`ws://${window.location.hostname}/ws`,socket=new WebSocket(gateway);socket.addEventListener('open',function(event){console.log('WebSocket connection established'),socket.send('started')}),socket.addEventListener('message',function(event){console.log('Message from server:',event.data),values.push([values.length,parseInt(event.data)]),drawGraph(values)}),socket.addEventListener('close',function(event){console.log('WebSocket connection closed')}),socket.addEventListener('error',function(event){console.error('WebSocket error:',event)})</script></body></html>)=====";